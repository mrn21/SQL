


/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */

Answer : 

SELECT facid, name, membercost
FROM Facilities
WHERE membercost <=0
LIMIT 0 , 30


/* Q2: How many facilities do not charge a fee to members? */

SELECT COUNT( * ) 
FROM Facilities
WHERE membercost <=0
LIMIT 0 , 30


/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT facid, name, membercost, monthlymaintenance
FROM Facilities
WHERE membercost <= ( .2 * monthlymaintenance ) 
AND membercost !=0
LIMIT 0 , 30


/* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */

SELECT * 
FROM Facilities
WHERE facid
IN ( 1, 5 ) 
LIMIT 0 , 30


/* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */

SELECT name, monthlymaintenance, 
CASE WHEN monthlymaintenance >100
THEN  'EXPENSIVE'
ELSE  'CHEAP'
END AS category
FROM Facilities



/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

SELECT firstname, surname, joindate
FROM Members
WHERE joindate
IN (
SELECT MAX( joindate ) 
FROM Members
)



/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT Members.firstname, Members.surname, Facilities.name
FROM Bookings
INNER JOIN Facilities ON Bookings.facid = Facilities.facid
INNER JOIN Members ON Members.memid = Bookings.memid
WHERE Facilities.name LIKE '%Tennis%COURT%'



/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */

SELECT fac.name, mem.surname, fac.guestcost * book.slots AS cost
FROM country_club.Bookings book
JOIN country_club.Facilities fac ON book.facid = fac.facid
JOIN country_club.Members mem ON mem.memid = book.memid
WHERE SUBSTR( starttime, 1, 10 ) = '2012-09-14'
AND mem.memid =0
UNION 
SELECT fac.name, mem.surname, SUM( fac.membercost * book.slots ) AS cost
FROM country_club.Bookings book
JOIN country_club.Facilities fac ON book.facid = fac.facid
JOIN country_club.Members mem ON mem.memid = book.memid
WHERE SUBSTR( starttime, 1, 10 ) = '2012-09-14'
AND mem.memid !=0
GROUP BY mem.memid
HAVING cost >30
ORDER BY cost DESC 
LIMIT 0 , 30



/* Q9: This time, produce the same result as in Q8, but using a subquery. */

SELECT guest.name, surname AS member, guest.cost
FROM country_club.Members mem
JOIN (

SELECT book.memid, fac.name, book.slots * fac.guestcost AS cost
FROM country_club.Bookings book
JOIN country_club.Facilities fac ON book.facid = fac.facid
WHERE SUBSTR( starttime, 1, 10 ) = '2012-09-14'
AND memid =0
)guest ON mem.memid = guest.memid
WHERE cost >30
UNION 
SELECT memb.name, mem.surname AS member, memb.cost
FROM country_club.Members mem
JOIN (

SELECT book.memid, fac.name, SUM( fac.membercost * book.slots ) AS cost
FROM country_club.Bookings book
JOIN country_club.Facilities fac ON book.facid = fac.facid
JOIN country_club.Members mem ON mem.memid = book.memid
WHERE SUBSTR( starttime, 1, 10 ) = '2012-09-14'
AND mem.memid !=0
GROUP BY mem.memid)memb ON mem.memid = memb.memid
WHERE cost >30
ORDER BY cost DESC 




/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

SELECT fac.name, SUM( IF( book.memid =0, fac.guestcost * book.slots, fac.membercost * book.slots ) ) AS revenue
FROM country_club.Facilities fac
JOIN country_club.Bookings book ON fac.facid = book.facid
GROUP BY fac.name
HAVING revenue <1000
ORDER BY revenue DESC 
